document.getElementById('registerForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const username = document.getElementById('registerUsername').value;
    const password = document.getElementById('registerPassword').value;

    try {
        const response = await fetch('https://c2c7e5e7-e39a-4904-9df5-eed140fd0927-00-2wrje0vsdbj9x.janeway.replit.dev:3002/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ username, password })
        });

        if (response.ok) {
            setMessage('Registration successful! You can now log in.', 'success');
        } else {
            const errorData = await response.json();
            setMessage(`Registration failed: ${errorData.message}`, 'error');
        }
    } catch (error) {
        setMessage(`Registration failed: ${error.message}`, 'error');
    }
});

document.getElementById('loginForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const username = document.getElementById('loginUsername').value;
    const password = document.getElementById('loginPassword').value;

    try {
        const response = await fetch('https://c2c7e5e7-e39a-4904-9df5-eed140fd0927-00-2wrje0vsdbj9x.janeway.replit.dev:3002/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ username, password })
        });

        const data = await response.json();

        if (response.ok) {
            localStorage.setItem('token', data.token);
            setMessage('Login successful!', 'success');
        } else {
            setMessage(`Login failed: ${data.message}`, 'error');
        }
    } catch (error) {
        setMessage(`Login failed: ${error.message}`, 'error');
    }
});

document.getElementById('scanForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const url = document.getElementById('url').value;
    document.getElementById('results').innerHTML = 'Scanning...';

    const token = localStorage.getItem('token');

    try {
        const response = await fetch('https://c2c7e5e7-e39a-4904-9df5-eed140fd0927-00-2wrje0vsdbj9x.janeway.replit.dev:3002/scan', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': token
            },
            body: JSON.stringify({ url })
        });

        const result = await response.json();
        displayResults(result);
    } catch (error) {
        document.getElementById('results').innerHTML = `Scan failed: ${error.message}`;
    }
});

document.getElementById('historyButton').addEventListener('click', async () => {
    const token = localStorage.getItem('token');
    try {
        const response = await fetch('https://c2c7e5e7-e39a-4904-9df5-eed140fd0927-00-2wrje0vsdbj9x.janeway.replit.dev:3002/history', {
            method: 'GET',
            headers: {
                'Authorization': token
            }
        });

        const history = await response.json();
        displayHistory(history);
    } catch (error) {
        document.getElementById('results').innerHTML = `Failed to load history: ${error.message}`;
    }
});

function setMessage(message, type) {
    const messageDiv = document.getElementById('message');
    messageDiv.innerHTML = message;
    messageDiv.className = type;
    setTimeout(() => {
        messageDiv.innerHTML = '';
        messageDiv.className = '';
    }, 5000);
}

function displayResults(results) {
    const resultsDiv = document.getElementById('results');
    resultsDiv.innerHTML = '<h2>Scan Results:</h2>';
    if (results.vulnerabilities.length > 0) {
        results.vulnerabilities.forEach(vuln => {
            const vulnDiv = document.createElement('div');
            if (vuln.type === 'SSL/TLS Analysis') {
                vulnDiv.innerHTML = `<strong>${vuln.type}</strong>: <pre>${JSON.stringify(JSON.parse(vuln.details), null, 2)}</pre>`;
            } else {
                vulnDiv.innerHTML = `<strong>${vuln.type}</strong>: ${vuln.details}`;
            }
            resultsDiv.appendChild(vulnDiv);
        });
    } else {
        resultsDiv.innerHTML = '<p>No vulnerabilities found.</p>';
    }
}

function displayHistory(history) {
    const resultsDiv = document.getElementById('results');
    resultsDiv.innerHTML = '<h2>Scan History:</h2>';
    if (history.length > 0) {
        history.forEach(scan => {
            const scanDiv = document.createElement('div');
            scanDiv.innerHTML = `<strong>${scan.date}</strong> - ${scan.url}<br>Vulnerabilities: ${scan.vulnerabilities.map(v => v.type).join(', ')}<br>Details:<pre>${scan.vulnerabilities.map(v => v.details).join('\n')}</pre>`;
            resultsDiv.appendChild(scanDiv);
        });
    } else {
        resultsDiv.innerHTML = '<p>No scan history found.</p>';
    }
}
